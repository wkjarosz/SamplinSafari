name: macOS build

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"
    paths:
      # This action only runs on push when C++ files are changed
      - "**.cpp"
      - "**.h"
      - "**.cmake"
      - "**Lists.txt"
      - "**-mac.yml"
  workflow_dispatch:

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    name: ${{ matrix.config.name }} (${{ matrix.buildtype }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # macos-13 is an intel x86_64 runner
          # macos-14 and macos-15 are arm64 runners
          - { name: "macOS 13", os: macos-13 }
          - { name: "macOS 14", os: macos-14 }
          - { name: "macOS 15", os: macos-15 }
        buildtype: [Release, Debug]

    steps:
      - name: Install dependencies
        run: brew install ninja create-dmg

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      # Setup caching of build artifacts to reduce total build time (only Linux and MacOS)
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.config.os }}-${{ matrix.buildtype }}

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build/${{ matrix.buildtype }} -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} -DCMAKE_POLICY_DEFAULT_CMP0135=NEW -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15

      - name: Build
        run: cmake --build ${{github.workspace}}/build/${{ matrix.buildtype }} --parallel 4 --config ${{ matrix.buildtype }}

      - name: Checking that Samplin Safari runs
        run: |
          ${{github.workspace}}/build/${{ matrix.buildtype }}/Samplin\ Safari.app/Contents/MacOS/Samplin\ Safari --help

      - name: Creating dmg (macOS)
        run: |
          RESULT="${{github.workspace}}/build/${{ matrix.buildtype }}/SamplinSafari.dmg"
          test -f $RESULT && rm $RESULT
          create-dmg --window-size 500 300 --icon-size 96 --volname "Samplin Safari Installer" --app-drop-link 360 105 --icon Samplin\ Safari.app 130 105 $RESULT ${{github.workspace}}/build/${{ matrix.buildtype }}/Samplin\ Safari.app

      - name: Archive dmg (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: SamplinSafari-${{ matrix.config.os }}-${{ matrix.buildtype }}.dmg
          path: |
            ${{github.workspace}}/build/${{ matrix.buildtype }}/SamplinSafari.dmg

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.config.os }}-${{ matrix.buildtype }}
          path: |
            ${{github.workspace}}/build/${{ matrix.buildtype }}
